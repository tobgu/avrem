cmdhistory=[";; Switching to avrem.bitmatch-test namespace" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'avrem.bitmatch)))" ";; Switching to avrem.bitmatch namespace" "(use 'clojure.stacktrace)" "(print-stack-trace *e 5)" "(print-stack-trace *e 50\\n                   )" "(print-stack-trace *e)" "make" "(vector)" "'()" "(type '())" "(map \#(print %) ())" "(map \#(+ 1 %) ())" "(map \#(+ 1 %) (1 2))" "(map \#(+ 1 %) '(1 2))" "(map \#(+ 1 %)\\n     )" "(map \#(+ 1 %) '())" "(maskmacro [3 2] [255])" "(maskmacro [\:g 2] [255])" "(maskmacro [\:g 2 \:f 3] [255])" "(print-stack-trace *e)" "(maskmacro [\:g 2 \:f 3] [255])" "(make-args [255] ([\:g 2 6]))" "(print-stack-trace *e)" "(root-cause *e)" "(print-cause-trace *e)" "(make-args [255] '([\:g 2 6]))" "(make-args [255] [[\:g 2 6]])" "(into [] [1 2 3])" "(into [] [[1 2 3]])" "(vector '(1 2 3))" "(into [] '(1 2 3))" "(in-ns 'avrem.emulator)\\n(ns avrem.emulator\\n  (\:use hexparser)\\n  (\:use instructions)\\n  (\:use avrem.bitmatch))\\n(in-ns 'avrem.bitmatch)" ";; Switching to avrem.emulator namespace" "(use avrem.emulator)" "(use avrem.hexparser)" "(run-example)" ";; Switching to emulator namespace" ";; Switching to avrem.emulator namespace" "(use avrem.emulator)" "(use avrem.hexparser)" "(use 'avrem.hexparser)" "(parse-hex-line \\"ffaa\\")" ";; Switching to avrem.emulator namespace" "(run-emulator-example)"]
eclipse.preferences.version=1
